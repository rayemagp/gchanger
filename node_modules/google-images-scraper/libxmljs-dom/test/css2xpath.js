var libxmljs = require('../index');
var fs = require('fs');

var doc = libxmljs.parseHtml(fs.readFileSync('./css2xpath.html'));


doc.root().namespace('http://example.com/test/testing?test=true')

var tests = {
    'first-child': 'ul.items-2 li:first-child, ul.items-1 li:first-child',
    'not first-child': 'ul.items-2 li:not(:first-child)',
    'last-child': 'ul.items-2 li:last-child',
    'not last-child': 'ul.items-2 li:not(:last-child)',
    'only-child': 'li:only-child',
    'not only-child': 'li:not(:only-child)',
    'has': 'ul:has(li)',
    'contains next-sibling': 'li:contains("first") + li',
    'internal': 'a:internal',
    'not internal': 'a:not(:internal)',
    'external': 'a:external',
    'path': 'a:path("/test/page")',
    'domain': 'a:domain("test")',
    'https': 'a:https',
}

for (var name in tests) {
    console.log(name+': \n');
    var selector = tests[name];
    var xpath = libxmljs.css2xpath(selector);
    console.log(" > ", selector, "\n\n\t=>\t", xpath, "\n");
    var results = doc.find(xpath);
    console.log("\t =>\tResults: ", results.length, "\n");
    results.forEach(function(res, i) {
        console.log("\t\t"+(i+1)+"\t=> ", res.toString(), "\n")
    })
}
